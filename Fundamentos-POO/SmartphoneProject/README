# üì± Sistema de Gerenciamento e Instala√ß√£o de Aplicativos Mobile (POO Avan√ßado)

## ü§ñ Constru√≠do com Assist√™ncia de IA (Gemini)

Este projeto foi concebido, estruturado e desenvolvido passo a passo com a ajuda da IA Gemini. A ferramenta atuou como um mentor t√©cnico, fornecendo as sugest√µes arquiteturais, validando o c√≥digo, corrigindo erros de compila√ß√£o, e garantindo a aplica√ß√£o correta dos padr√µes de C\# e Programa√ß√£o Orientada a Objetos.

O *log* de conversas com a IA √© o principal registro da metodologia de constru√ß√£o e das decis√µes de design tomadas.

-----

## üéØ Objetivo do Projeto

O objetivo principal deste projeto √© consolidar e demonstrar o dom√≠nio dos pilares avan√ßados da **Programa√ß√£o Orientada a Objetos (POO)** e conceitos de design de software em C\#/.NET, simulando um ambiente simplificado de gerenciamento de *smartphones* e instala√ß√£o de aplicativos.

## üß± Conceitos de POO Aplicados

A arquitetura do projeto foi desenhada para aplicar os seguintes princ√≠pios:

| Conceito | Aplica√ß√£o no Projeto |
| :--- | :--- |
| **Heran√ßa e Polimorfismo** | A classe base `Smartphone` (abstrata) define o contrato. As classes `Nokia` e `Iphone` herdam e implementam de forma polim√≥rfica o m√©todo `InstalarAplicativoAsync()`, adicionando seu comportamento espec√≠fico. |
| **Encapsulamento** | A lista de aplicativos instalados √© mantida como um campo `private readonly List<App>` e √© exposta ao mundo externo apenas atrav√©s da interface de leitura **`IReadOnlyList<App>`**, protegendo o estado interno do objeto. |
| **Abstra√ß√£o (Interfaces)** | O projeto utiliza interfaces (`IStorageService`, `IAppStoreService`) para desacoplar a defini√ß√£o do contrato de sua implementa√ß√£o, permitindo a **Inje√ß√£o de Depend√™ncia (DI)**. |
| **Assincronismo** | Utiliza√ß√£o de `Task`, `async` e `await` no `AppStoreService` e nos m√©todos de instala√ß√£o para simular opera√ß√µes demoradas (como *download*) sem bloquear a *thread* principal. |
| **Separa√ß√£o de Preocupa√ß√µes** | A l√≥gica √© dividida em *namespaces* e pastas claras: `Models` (Entidades), `Services` (L√≥gica de Neg√≥cio e DI), e `Core` (Dom√≠nio principal). |

-----

## üìÅ Estrutura do Projeto Core

O projeto principal (`SmartphoneCore`) segue a seguinte organiza√ß√£o l√≥gica, conforme sugerido e validado pela IA:

```cs
SmartphoneCore/
‚îú‚îÄ‚îÄ Models/
‚îÇ   ‚îú‚îÄ‚îÄ App.cs           <- Entidade de Dados (Com valida√ß√£o b√°sica no construtor).
‚îÇ   ‚îú‚îÄ‚îÄ Smartphone.cs    <- Classe Abstrata (L√≥gica base de instala√ß√£o e valida√ß√µes).
‚îÇ   ‚îú‚îÄ‚îÄ Nokia.cs         <- Implementa√ß√£o (Comportamento polim√≥rfico).
‚îÇ   ‚îî‚îÄ‚îÄ Iphone.cs        <- Implementa√ß√£o (Comportamento polim√≥rfico).
‚îú‚îÄ‚îÄ Services/
‚îÇ   ‚îú‚îÄ‚îÄ IStorageService.cs     <- Interface para checagem de espa√ßo.
‚îÇ   ‚îú‚îÄ‚îÄ StorageService.cs      <- Implementa√ß√£o da l√≥gica de checagem.
‚îÇ   ‚îú‚îÄ‚îÄ IAppStoreService.cs    <- Interface para orquestra√ß√£o de download/instala√ß√£o.
‚îÇ   ‚îî‚îÄ‚îÄ AppStoreService.cs     <- Implementa√ß√£o com simula√ß√£o de 'await Task.Delay'.
‚îî‚îÄ‚îÄ SmartphoneCore.csproj
```

### Decis√µes Cruciais de Design (Di√°logo com a IA)

| T√≥pico Discutido | Resultado / Decis√£o de Design |
| :--- | :--- |
| **Depend√™ncias** | Definiu-se que `App` e `Tests` precisavam "enxergar" o `Core`, mas o `Core` n√£o depende de ningu√©m, garantindo a natureza de **biblioteca de dom√≠nio** independente. |
| **Estrutura de Pastas** | Foi estabelecida a separa√ß√£o clara entre `Models`, `Services`, `Persistence` e `Utils` para seguir o princ√≠pio de Separa√ß√£o de Preocupa√ß√µes. |
| **Encapsulamento** | A IA validou o uso do par `private readonly List<App>` e `public IReadOnlyList<App>` para garantir que a lista de apps seja somente leitura externamente. |
| **Centraliza√ß√£o da L√≥gica** | O m√©todo `protected virtual InstalarApp()` foi criado na classe `Smartphone` para centralizar a l√≥gica de `ChecarEspaco` e `_aplicativosInstalados.Add()` na classe base, permitindo que as subclasses apenas adicionassem mensagens polim√≥rficas (Reuso de C√≥digo). |
| **Assinatura Ass√≠ncrona** | O tipo de retorno `Task` foi introduzido para preparar o projeto para o assincronismo, simulando opera√ß√µes reais de I/O em m√©todos como `InstalarAplicativoAsync`. |

-----

## üöÄ Como Rodar o Projeto

### Pr√©-requisitos

* [.NET SDK 8.0](https://dotnet.microsoft.com/download) ou superior.
* Editor de C√≥digo (VS Code, Visual Studio, etc.).

### Execu√ß√£o

1. **Clone o Reposit√≥rio:**

```bash
    git clone [SEU_LINK_DO_REPOSITORIO]
    cd NomeDoDiretorioDoProjeto/SmartphoneProject
```

1. **Execute o Projeto de Demonstra√ß√£o:**

Rode o projeto `SmartphoneApp`, que cont√©m a l√≥gica de demonstra√ß√£o no `Program.cs`.

```bash
    dotnet run --project SmartphoneApp
```

### Exemplo de Sa√≠da Esperada

A sa√≠da dever√° demonstrar o polimorfismo, o assincronismo (com o delay de 2.5s) e a checagem de espa√ßo:

```cs
    --- Cen√°rio 1: Nokia (Instala√ß√£o de Sucesso) ---
    Nokia Tijol√£o est√° ligando.

    [AppStore] Iniciando download de WhatsApp...
    // ... (Aguarde 2.5 segundos) ...
    [AppStore] Download de WhatsApp (30 MB) conclu√≠do.

    [Nokia Store] Iniciando processo de download de WhatsApp...
    ‚úÖ Nokia Tijol√£o: WhatsApp instalado com sucesso.

    --- Aplicativos Instalados (Nokia Tijol√£o) ---
    - WhatsApp - 1.0.0 - 30 MB

    --- Cen√°rio 2: iPhone (Mem√≥ria Insuficiente) ---
    O iPhone 4S est√° recebendo liga√ß√£o do n√∫mero 119999-0000.

    [AppStore] Iniciando download de Jogo Pesado...
    // ... (Aguarde 2.5 segundos) ...
    [AppStore] Download de Jogo Pesado (150 MB) conclu√≠do.

    [Iphone Store] Iniciando processo de download de Jogo Pesado...
    üõë iPhone 4S: Falha ao instalar Jogo Pesado. Mem√≥ria insuficiente.

    --- Aplicativos Instalados (iPhone 4S) ---
    Nenhum app instalado.
```

-----

## üõ†Ô∏è Tecnologias

* **Linguagem:** C\#
* **Plataforma:** .NET 8.0
* **Metodologia:** POO Avan√ßado (Abstra√ß√£o, DI, Assincronismo)
* **Assist√™ncia:** Gemini (Google)

-----

Feito com üíô por [Seu Nome/GitHub User]
